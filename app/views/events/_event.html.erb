<% 
	description ||= :none
	signUpButton ||= false
	showLinks ||= false
	type ||= :display
	
	participation = event.participations.find_by_user_id(current_user.id)
	hours = participation != nil ? participation.hours_volunteered != nil ? participation.hours_volunteered : 0 : 0
%>
<div class="event-summary">
	<div class="row-fluid">
		<div class="<%= type == :display ? "span12" : "span10" %>">
			<div class="event-title">
				<%= link_to(truncate(event.name, :length=>30, :separator=>' '), event) %>
				<em><%= "(volunteered #{hours} #{'hour'.pluralize(hours)})" if hours > 0 %></em>
			</div>
			<div class="row-fluid">
				<div class="span12">
					<span><%= event.start.to_date.to_formatted_s(:rfc822) %>   |</span>
					<span class="pull-center"><%= event.start.strftime('%l:%M%p') %> - <%= event.end.strftime('%l:%M%p') %></span>
				</div>
			</div>
			<div class="row-fluid">
				<div class="span12">
					<span><%= render :partial => "skills/strip", :locals => { :entity => event, :size => "small" } %></span>
					<% if signUpButton %>
						<span style="float:right"><%= button_to("sign up", register_event_url(event), :method=> :post, :class => "btn btn-primary block")  %></span>
					<% end %>
				</div>
			</div>
			<% if description != :none %>
				<div class="row-fluid">
					<div class="span12">
						<%= 
							length = 60;
						    # Use this switch to support more sizes
							case description
								when :medium
									length = 120
								when :full
									length = 0
							end
							truncate(event.description, :length=>length, :separator=>' ')
						%>
					</div>
				</div>
			<% end %>
			<% if showLinks %>
				<div class="row-fluid">
					<div class="span12"><%= render(:partial => 'events/links', :locals => { :event => event }) %></div>
				</div>
			<% end %>
		</div>
		<% if type != :display %>
		<div class="span2">
			<%= 
				case type
					when :past
						render(:partial => "events/actions_past", :locals => { :event => event })
					when :upcoming
						render(:partial => "events/actions_upcoming", :locals => { :event => event })
					when :recommended
						render(:partial => "events/actions_recommended", :locals => { :event => event })
				end
			%>
		</div>
		<% end %>
	</div>
</div>